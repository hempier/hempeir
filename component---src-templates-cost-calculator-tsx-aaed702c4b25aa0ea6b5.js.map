{"version":3,"sources":["webpack://gatsby-starter-default/./src/components/page-text/page-text.tsx","webpack://gatsby-starter-default/./src/components/top-banner/top-banner.tsx","webpack://gatsby-starter-default/./src/components/cost-calculator/coast-form.tsx","webpack://gatsby-starter-default/./src/components/cost-calculator/cost-calculator.tsx","webpack://gatsby-starter-default/./src/templates/cost-calculator.tsx"],"names":["props","text","className","renderAst","childMarkdownRemark","htmlAst","heading","description","image","TopBannerBackground","file","url","Boolean","rawMarkdownBody","state","wallWidth","wall","floorsWidth","floors","roof","foundation","innerSeparator","handleChange","event","this","setState","target","name","Number","value","render","selectedElem","wallRef","focus","floorRef","roofRef","innerSeparatorRef","foundationRef","totalCoast","totalMaterials","MATERIAL_CUBIC_METER_COST","costForm","hempMixCubicMetetrPrice","totalWallsMaterial","totalWallsCoast","totalFloorsMaterial","totalFloorsCoast","totalRoofMaterial","totalRoofCoast","totalFoundationMaterial","totalFoundationCoast","totalInnerSeparatorMaterial","action","wallsHeading","wallWidthLabel","type","defaultChecked","onChange","defaultValue","htmlFor","wallsAreaLabel","ref","r","id","autoFocus","onClick","e","onSelected","floorsHeading","floorsWidthLabel","floorsAreaLabel","roofHeading","roofAreaLabel","foundationHeading","foundationAreaLabel","innerSeparatorsHeading","innerSeparatorsAreaLabal","totalMaterialLabel","totalCostLabel","Component","useState","setSelectedElem","console","log","startsWith","what","Locale","pageContext","page","allLocales","costCaslculatorTopBanner","findByInternalName","ComponentInternalName","costCaslculatorPageText","costCaslculator","feedbackForm","currentLocale","node_locale"],"mappings":"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","file":"component---src-templates-cost-calculator-tsx-aaed702c4b25aa0ea6b5.js","sourcesContent":["import * as React from \"react\"\nimport renderAst from \"../util-html-to-react\";\n\nimport \"./page-text.scss\"\n\nconst PageText = props => {\n  const { text } = props\n\n  return (\n    <div className=\"page-text col-xs\">\n      {renderAst(text.text.childMarkdownRemark.htmlAst)}\n    </div>\n  )\n}\n\nexport default PageText\n","import * as React from \"react\"\nimport styled from \"@emotion/styled\"\nimport { css } from \"@emotion/react\"\n\nimport \"./top-banner.scss\"\n\n\n\nconst TopBanner = (props) => {\n  const { heading, description, image } = props\n\n  const TopBannerBackground = styled.div`\n    background-repeat: no-repeat;\n    background-position: center;\n    background-size: cover;\n    background-image: url(${image?.file.url || []});\n  `\n  return (\n    <TopBannerBackground className=\"top-banner\">\n      <div className=\"top-banner__inner-wrap container\">\n        <h1 className=\"top-banner__title col-xs\">{heading}</h1>\n        {Boolean(description?.childMarkdownRemark) &&\n          <p className=\"top-banner__description col-xs\">\n            {description.childMarkdownRemark.rawMarkdownBody}\n          </p>\n        }\n      </div>\n    </TopBannerBackground>\n  )\n}\n\nexport default TopBanner\n","import React, { Component } from \"react\"\n\nclass Form extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {  wallWidth: 0.2, wall: 0, floorsWidth: 0.2, floors: 0, roof: 0, foundation: 0, innerSeparator: 0,  }\n  }\n\n  handleChange(event) {\n    this.setState({\n      // Computed property names\n      // keys of the objects are computed dynamically\n      [event.target.name]: Number(event.target.value),\n    })\n  }\n\n  render() {\n    if (this.props.selectedElem === \"wall\") {\n      this.wallRef.focus()\n    }\n    if (this.props.selectedElem === \"floors\") {\n      this.floorRef.focus()\n    }\n    if (this.props.selectedElem === \"roof\") {\n      this.roofRef.focus()\n    }\n    if (this.props.selectedElem === \"innerSeparator\") {\n      this.innerSeparatorRef.focus()\n    }\n    if (this.props.selectedElem === \"foundation\") {\n      this.foundationRef.focus()\n    }\n\n    let totalCoast, totalMaterials = 0\n    const MATERIAL_CUBIC_METER_COST = this.props.costForm.hempMixCubicMetetrPrice\n    const FOUNDATION_MATERIAL_WIDTH = 0.3\n    const ROOF_MATERIAL_WIDTH = 0.3\n    const INNER_SEPARATOR_MATERIAL_WIDTH = 0.2\n\n    let totalWallsMaterial = this.state.wallWidth * this.state.wall\n    let totalWallsCoast = totalWallsMaterial*MATERIAL_CUBIC_METER_COST\n\n    let totalFloorsMaterial = this.state.floorsWidth * this.state.floors\n    let totalFloorsCoast = totalFloorsMaterial * MATERIAL_CUBIC_METER_COST\n\n    let totalRoofMaterial = this.state.roof * ROOF_MATERIAL_WIDTH\n    let totalRoofCoast = totalRoofMaterial * MATERIAL_CUBIC_METER_COST\n\n    let totalFoundationMaterial = this.state.foundation * FOUNDATION_MATERIAL_WIDTH\n    let totalFoundationCoast = totalFoundationMaterial * MATERIAL_CUBIC_METER_COST\n\n    let totalInnerSeparatorMaterial = this.state.innerSeparator * INNER_SEPARATOR_MATERIAL_WIDTH\n    let totalInnerSeparatorCoast = totalInnerSeparatorMaterial * MATERIAL_CUBIC_METER_COST\n\n    totalMaterials = totalWallsMaterial + totalFloorsMaterial + totalRoofMaterial + totalFoundationMaterial + totalInnerSeparatorMaterial\n    totalCoast = totalWallsCoast + totalFloorsCoast + totalRoofCoast + totalFoundationCoast + totalInnerSeparatorCoast\n\n    return (\n      <form action=\"\" className=\"cost-calculator__form form-body\">\n        <div className=\"cost-calculator__fieldset\">\n          <h5 className=\"cost-calculator__heading\">{this.props.costForm.wallsHeading}</h5>\n          <div className=\"cost-calculator__fieldset-inner row\">\n            <div className=\"cost-calculator__radio-label col-xs-12 col-lg-6\">{this.props.costForm.wallWidthLabel}</div>\n            <label className=\"radio radio-gradient col-xs-6 col-lg-3\">\n              <span className=\"radio__input\">\n                <input\n                  type=\"radio\"\n                  name=\"wallWidth\"\n                  defaultChecked\n                  value=\"0.2\"\n                  onChange={event => this.handleChange(event)}\n                />\n                <span className=\"radio__control\"></span>\n              </span>\n              <span className=\"radio__label\">20 см</span>\n            </label>\n            <label className=\"radio radio-gradient col-xs-6 col-lg-3\">\n              <span className=\"radio__input\">\n                <input\n                  type=\"radio\"\n                  name=\"wallWidth\"\n                  defaultValue=\"0.4\"\n                  onChange={event => this.handleChange(event)}\n                />\n                <span className=\"radio__control\"></span>\n              </span>\n              <span className=\"radio__label\">40 см</span>\n            </label>\n          </div>\n          <div className=\"cost-calculator__fieldset-inner row\">\n            <label htmlFor=\"wall\" className=\"col-xs-12 col-lg-6\">\n              {this.props.costForm.wallsAreaLabel}\n            </label>\n            <input\n              ref={r => (this.wallRef = r)}\n              type=\"text\"\n              id=\"wall\"\n              name=\"wall\"\n              autoFocus={this.props.selectedElem === \"wall\"}\n              className=\"form-input col-xs-10 col-xm-11 col-lg-5\"\n              onClick={e => {\n                this.props.onSelected(e.target.id)\n              }}\n              onChange={event => this.handleChange(event)}\n            />\n            <div className=\"cost-calculator__metric col-xs-2 col-xm-1 col-lg-1\">\n              м<sup className=\"cost-calculator__metric-power\">2</sup>\n            </div>\n          </div>\n        </div>\n        <div className=\"cost-calculator__fieldset\">\n          <h5 className=\"cost-calculator__heading\">{this.props.costForm.floorsHeading}</h5>\n          <div className=\"cost-calculator__fieldset-inner row\">\n            <div className=\"cost-calculator__radio-label  col-xs-12 col-lg-6\">{this.props.costForm.floorsWidthLabel}</div>\n            <label className=\"radio radio-gradient col-xs-6 col-lg-3\">\n              <span className=\"radio__input\">\n                <input\n                  type=\"radio\"\n                  name=\"floorsWidth\"\n                  defaultChecked\n                  value=\"0.2\"\n                  onChange={event => this.handleChange(event)}\n                />\n                <span className=\"radio__control\"></span>\n              </span>\n              <span className=\"radio__label\">20 см</span>\n            </label>\n            <label className=\"radio radio-gradient col-xs-6 col-lg-3\">\n              <span className=\"radio__input\">\n                <input\n                  type=\"radio\"\n                  name=\"floorsWidth\"\n                  defaultValue=\"0.3\"\n                  onChange={event => this.handleChange(event)}\n                />\n                <span className=\"radio__control\"></span>\n              </span>\n              <span className=\"radio__label\">30 см</span>\n            </label>\n          </div>\n          <div className=\"cost-calculator__fieldset-inner row\">\n            <label htmlFor=\"floors\" className=\"col-xs-12 col-lg-6\">\n              {this.props.costForm.floorsAreaLabel}\n            </label>\n            <input\n              ref={r => (this.floorRef = r)}\n              type=\"text\"\n              id=\"floors\"\n              name=\"floors\"\n              className=\"form-input col-xs-10 col-xm-11 col-lg-5\"\n              onClick={e => {\n                this.props.onSelected(e.target.id)\n              }}\n              onChange={event => this.handleChange(event)}\n            />\n            <div className=\"cost-calculator__metric col-xs-2 col-xm-1 col-lg-1\">\n              м<sup className=\"cost-calculator__metric-power\">2</sup>\n            </div>\n          </div>\n        </div>\n        <div className=\"cost-calculator__fieldset\">\n          <h5 className=\"cost-calculator__heading\">{this.props.costForm.roofHeading}</h5>\n          <div className=\"cost-calculator__radio cost-calculator__fieldset-inner row\">\n            <label htmlFor=\"roof\" className=\"col-xs-12 col-lg-6\">\n              {this.props.costForm.roofAreaLabel}\n            </label>\n            <input\n              ref={r => (this.roofRef = r)}\n              type=\"text\"\n              id=\"roof\"\n              name=\"roof\"\n              className=\"form-input col-xs-10 col-xm-11 col-lg-5\"\n              onClick={e => {\n                this.props.onSelected(e.target.id)\n              }}\n              onChange={event => this.handleChange(event)}\n            />\n            <div className=\"cost-calculator__metric col-xs-2 col-xm-1 col-lg-1\">\n              м<sup className=\"cost-calculator__metric-power\">2</sup>\n            </div>\n          </div>\n        </div>\n        <div className=\"cost-calculator__fieldset\">\n          <h5 className=\"cost-calculator__heading\">{this.props.costForm.foundationHeading}</h5>\n          <div className=\"cost-calculator__radio cost-calculator__fieldset-inner row\">\n            <label htmlFor=\"roof\" className=\"col-xs-12 col-lg-6\">\n              {this.props.costForm.foundationAreaLabel}\n            </label>\n            <input\n              ref={r => (this.foundationRef = r)}\n              type=\"text\"\n              id=\"foundation\"\n              name=\"foundation\"\n              className=\"form-input col-xs-10 col-xm-11 col-lg-5\"\n              onClick={e => {\n                this.props.onSelected(e.target.id)\n              }}\n              onChange={event => this.handleChange(event)}\n            />\n            <div className=\"cost-calculator__metric col-xs-2 col-xm-1 col-lg-1\">\n              м<sup className=\"cost-calculator__metric-power\">2</sup>\n            </div>\n          </div>\n        </div>\n        <div className=\"cost-calculator__fieldset\">\n          <h5 className=\"cost-calculator__heading\">{this.props.costForm.innerSeparatorsHeading}</h5>\n\n          <div className=\"cost-calculator__fieldset-inner row\">\n            <label htmlFor=\"innerSeparator\" className=\"col-xs-12 col-lg-6\">\n              {this.props.costForm.innerSeparatorsAreaLabal}\n            </label>\n            <input\n              ref={r => (this.innerSeparatorRef = r)}\n              type=\"text\"\n              id=\"innerSeparator\"\n              name=\"innerSeparator\"\n              className=\"form-input col-xs-10 col-xm-11 col-lg-5\"\n              onClick={e => {\n                this.props.onSelected(e.target.id)\n              }}\n              onChange={event => this.handleChange(event)}\n            />\n            <div className=\"cost-calculator__metric col-xs-2 col-xm-1 col-lg-1\">\n              м<sup className=\"cost-calculator__metric-power\">2</sup>\n            </div>\n          </div>\n        </div>\n        <div className=\"cost-calculator__finals\">\n            <div className=\"cost-calculator__finals-material row\">\n                <h4 className=\"cost-calculator__finals-material-heading col-xs-6 col-lg-5\"> {this.props.costForm.totalMaterialLabel}</h4>\n                <div className=\"cost-calculator__finals-material-inner-wrap col-xs-6 col-lg-7\">\n                  {totalMaterials}\n                  <div className=\"cost-calculator__metric\">\n                    &nbsp;м<sup className=\"cost-calculator__metric-power\">3</sup>\n                  </div>\n                </div>\n            </div>\n            <div className=\"cost-calculator__finals-cost row\">\n                <h4 className=\"cost-calculator__finals-cost-heading col-xs-6 col-lg-5\">{this.props.costForm.totalCostLabel}</h4>\n                <h4 className=\"cost-calculator__finals-cost-heading col-xs-6 col-lg-7\">\n                  {totalCoast}&nbsp;грн.\n                </h4>\n            </div>\n        </div>\n      </form>\n    )\n  }\n}\n\nexport default Form\n","import React, { useRef, useEffect } from \"react\"\nimport CoastForm from \"./coast-form\"\nimport House from \"../../images/cost-calculator/house.svg\"\nimport \"./cost-calculator.scss\"\nimport { useState } from \"react\"\n\nconst CostCalculator = ({\n  name,\n  heading,\n  wallsHeading,\n  wallWidthLabel,\n  wallsAreaLabel,\n  floorsHeading,\n  floorsWidthLabel,\n  floorsAreaLabel,\n  roofHeading,\n  roofAreaLabel,\n  foundationHeading,\n  foundationAreaLabel,\n  innerSeparatorsHeading,\n  innerSeparatorsAreaLabal,\n  totalMaterialLabel,\n  totalCostLabel,\n  hempMixCubicMetetrPrice\n}) => {\n  const [selectedElem, setSelectedElem] = useState(\"\")\n  const costForm = {\n    wallsHeading,\n    wallWidthLabel,\n    wallsAreaLabel,\n    floorsHeading,\n    floorsWidthLabel,\n    floorsAreaLabel,\n    roofHeading,\n    roofAreaLabel,\n    foundationHeading,\n    foundationAreaLabel,\n    innerSeparatorsHeading,\n    innerSeparatorsAreaLabal,\n    totalMaterialLabel,\n    totalCostLabel,\n    hempMixCubicMetetrPrice,\n  }\n\n  return (\n    <section className=\"cost-calculator container\">\n      <div className=\"cost-calculator__name subtitle-2 col-xs-12\">{name}</div>\n      <h2 className=\"cost-calculator__title col-xs-12\">{heading}</h2>\n      <div className=\"cost-calculator__inner-wrap col-xs-12\">\n        <House\n          onClick={e => {\n            const id = e?.target?.id ?? \"\"\n            console.log(id)\n            if (id.startsWith(\"wall\")) {\n              setSelectedElem(\"wall\")\n            }\n            if (id.startsWith(\"roof\")) {\n              setSelectedElem(\"roof\")\n            }\n            if (id.startsWith(\"slab\")) {\n              setSelectedElem(\"floors\")\n            }\n            if (id.startsWith(\"inner-separator\")) {\n              setSelectedElem(\"innerSeparator\")\n            }\n            if (id.startsWith(\"foundation\")) {\n              setSelectedElem(\"foundation\")\n            }\n          }}\n          className={\n            \"cost-calculator__image col-xs-12 col-lg-6 \" + selectedElem\n          }\n        />\n        <div className=\"cost-calculator__content col-xs-12 col-lg-6\">\n          <CoastForm\n            selectedElem={selectedElem}\n            onSelected={what => setSelectedElem(what)}\n            costForm={costForm}\n          />\n        </div>\n      </div>\n    </section>\n  )\n}\n\nexport default CostCalculator\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport TopPageBanner from \"../components/top-banner/top-banner\"\nimport PageText from \"../components/page-text/page-text\"\nimport CostCalculator from \"../components/cost-calculator/cost-calculator\"\nimport FeedbackForm from \"../components/feedback-form/feedback-form\"\n\nimport {\n  findByInternalName,\n  ComponentInternalName,\n} from \"../components/component-internal-name\"\nimport { filterPageLocale, Locale } from \"../components/locale-provider\"\n\nconst locale = Locale.Ua\n\nexport default ({ pageContext: { page, allLocales } }) => {\n  // const localizedPage = filterPageLocale(page, locale)\n  // const localizedPage = page\n\n  const costCaslculatorTopBanner = findByInternalName(\n    page,\n    ComponentInternalName.CostCaslculatorTopBanner\n  )\n  const costCaslculatorPageText = findByInternalName(\n    page,\n    ComponentInternalName.CostCaslculatorPageText\n  )\n  const costCaslculator = findByInternalName(\n    page,\n    ComponentInternalName.CostCaslculator\n  )\n  const feedbackForm = findByInternalName(\n    page,\n    ComponentInternalName.FeedbackForm\n  )\n\n  return (\n    <Layout allLocales={allLocales} currentLocale={page.node_locale}>\n      <TopPageBanner {...costCaslculatorTopBanner} />\n      <PageText text={costCaslculatorPageText} />\n      <CostCalculator {...costCaslculator}/>\n      <FeedbackForm {...feedbackForm}/>\n    </Layout>\n  )\n}\n"],"sourceRoot":""}