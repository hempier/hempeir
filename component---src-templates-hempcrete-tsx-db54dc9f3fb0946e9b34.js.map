{"version":3,"sources":["webpack://gatsby-starter-default/./src/components/advantages-trusted/advantages-trusted.tsx","webpack://gatsby-starter-default/./src/components/page-text/page-text.tsx","webpack://gatsby-starter-default/./src/components/top-banner/top-banner.tsx","webpack://gatsby-starter-default/./src/components/aplication-areas/aplication-areas.tsx","webpack://gatsby-starter-default/./src/templates/hempcrete.tsx"],"names":["AdvantagesTrustedItem","image","heading","description","className","src","file","url","alt","childMarkdownRemark","rawMarkdownBody","items","advantagesTrustedItems","content","sort","a","b","position","name","title","map","props","id","key","toString","text","renderAst","htmlAst","TopBannerBackground","Boolean","AplicationAreasItem","Locale","pageContext","page","allLocales","hempcretePageTopBanner","findByInternalName","ComponentInternalName","hempcretePageText","hempcreteAdvantagesTrusted","hempcreteBenefitsTrusted","hempcreteAplicationAreas","feedbackForm","currentLocale","node_locale"],"mappings":"uKAsBMA,EAAwB,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,QAASC,EAAnB,EAAmBA,YAAnB,OAC5B,eAAKC,UAAU,yDACb,eAAKC,IAAKJ,EAAMK,KAAKC,IAAKC,IAAI,GAAGJ,UAAU,uBAC3C,cAAIA,UAAU,uBAAuBF,IACrC,aAAGE,UAAU,4BACVD,aAAA,EAAAA,EAAaM,oBAAoBC,kBAAmB,QAK3D,IA5B0B,SAAC,GAAc,IAAZC,EAAY,EAAZA,MACrBC,GAAyBD,aAAA,EAAAA,EAAOE,QAAQC,MAC1C,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,SAAWD,EAAEC,cACtB,GAEP,OACE,mBAASb,UAAU,yBACjB,eAAKA,UAAU,yCAAyCO,EAAMO,OAC9D,cAAId,UAAU,+BAA+BO,EAAMQ,QACnD,eAAKf,UAAU,0BACZQ,EAAuBQ,KAAI,SAACC,EAAOC,GAAR,OAC1B,QAACtB,GAAD,QAAuBuB,IAAKD,EAAGE,YAAgBH,W,kECAzD,IAViB,SAAAA,GAAS,IAChBI,EAASJ,EAATI,KAER,OACE,eAAKrB,UAAU,qBACZsB,OAAUD,EAAKA,KAAKhB,oBAAoBkB,Y,oECqB/C,IAvBkB,SAACN,GAAU,IACnBnB,EAAgCmB,EAAhCnB,QAASC,EAAuBkB,EAAvBlB,YAAaF,EAAUoB,EAAVpB,MAExB2B,GAAsB,cAAH,oBAAG,CAAH,sGAIC3B,aAAA,EAAAA,EAAOK,KAAKC,MAAO,GAJpB,MAMzB,OACE,QAACqB,EAAD,CAAqBxB,UAAU,eAC7B,eAAKA,UAAU,qCACb,cAAIA,UAAU,4BAA4BF,GACzC2B,QAAQ1B,aAAD,EAACA,EAAaM,uBACpB,aAAGL,UAAU,kCACVD,EAAYM,oBAAoBC,qB,uJCKvCoB,EAAsB,SAAC,GAAD,IAAG7B,EAAH,EAAGA,MAAOC,EAAV,EAAUA,QAASC,EAAnB,EAAmBA,YAAnB,OAC1B,eAAKC,UAAU,2BACb,eAAKC,IAAKJ,EAAMK,KAAKC,IAAKC,IAAI,GAAGJ,UAAU,6BAC3C,eAAKA,UAAU,8BACb,cAAIA,UAAU,6BAA6BF,GAC1C2B,QAAQ1B,aAAD,EAACA,EAAaM,uBACpB,aAAGL,UAAU,iCACVD,EAAYM,oBAAoBC,oBAO3C,EAtCwB,SAAC,GAAc,IAAZC,EAAY,EAAZA,MACnBC,GAAyBD,aAAA,EAAAA,EAAOE,UAAW,GAEjD,OACE,mBAAST,UAAU,8BAChByB,QAAQlB,aAAD,EAACA,EAAOO,QACd,eAAKd,UAAU,+CACZO,EAAMO,MAGVW,QAAQlB,aAAD,EAACA,EAAOQ,SACd,cAAIf,UAAU,qCACXO,EAAMQ,QAGX,eAAKf,UAAU,0CACZQ,EAAuBQ,KAAI,SAACC,EAAOC,GAAR,OAC1B,QAACQ,GAAD,QAAqBP,IAAKD,EAAGE,YAAgBH,U,oBCJvD,G,QAFeU,KAEf,SAAe,GAA2C,QAAxCC,YAAeC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,WAI/BC,GAAyBC,OAC7BH,EACAI,wBAEIC,GAAoBF,OACxBH,EACAI,uBAEIE,GAA6BH,OACjCH,EACAI,gCAEIG,GAA2BJ,OAC/BH,EACAI,8BAEII,GAA2BL,OAC/BH,EACAI,8BAGIK,GAAeN,OACnBH,EACAI,kBAGF,OACE,QAAC,IAAD,CAASH,WAAYA,EAAYS,cAAeV,EAAKW,cACnD,QAAC,IAAkBT,IACnB,QAAC,IAAD,CAAUV,KAAMa,KAChB,QAAC,EAAD,CAAiB3B,MAAO8B,KACxB,QAAC,IAAD,CAAmB9B,MAAO4B,KAC1B,QAAC,IAAD,CAAmB5B,MAAO6B,KAC1B,QAAC,IAAiBE","file":"component---src-templates-hempcrete-tsx-db54dc9f3fb0946e9b34.js","sourcesContent":["import * as React from \"react\"\n\nimport \"./advantages-trusted.scss\"\n\nconst AdvantagesTrusted = ({ items }) => {\n  const advantagesTrustedItems = items?.content.sort(\n      (a, b) => a.position - b.position\n    ) || []\n\n  return (\n    <section className=\"advantages container\">\n      <div className=\"advantages__name subtitle-1 col-xs-12\">{items.name}</div>\n      <h2 className=\"advantages__title col-xs-12\">{items.title}</h2>\n      <div className=\"advantages__inner-wrap\">\n        {advantagesTrustedItems.map((props, id) => (\n          <AdvantagesTrustedItem key={id.toString()} {...props} />\n        ))}\n      </div>\n    </section>\n  )\n}\n\nconst AdvantagesTrustedItem = ({ image, heading, description }) => (\n  <div className=\"advantages__item col-xs-6 col-xm-4 col-sm-4 col-md-3\">\n    <img src={image.file.url} alt=\"\" className=\"advantages__image\" />\n    <h4 className=\"advantages__heading\">{heading}</h4>\n    <p className=\"advantages__description\">\n      {description?.childMarkdownRemark.rawMarkdownBody || null}\n    </p>\n  </div>\n)\n\nexport default AdvantagesTrusted\n","import * as React from \"react\"\nimport renderAst from \"../util-html-to-react\";\n\nimport \"./page-text.scss\"\n\nconst PageText = props => {\n  const { text } = props\n\n  return (\n    <div className=\"page-text col-xs\">\n      {renderAst(text.text.childMarkdownRemark.htmlAst)}\n    </div>\n  )\n}\n\nexport default PageText\n","import * as React from \"react\"\nimport styled from \"@emotion/styled\"\nimport { css } from \"@emotion/react\"\n\nimport \"./top-banner.scss\"\n\n\n\nconst TopBanner = (props) => {\n  const { heading, description, image } = props\n\n  const TopBannerBackground = styled.div`\n    background-repeat: no-repeat;\n    background-position: center;\n    background-size: cover;\n    background-image: url(${image?.file.url || []});\n  `\n  return (\n    <TopBannerBackground className=\"top-banner\">\n      <div className=\"top-banner__inner-wrap container\">\n        <h1 className=\"top-banner__title col-xs\">{heading}</h1>\n        {Boolean(description?.childMarkdownRemark) &&\n          <p className=\"top-banner__description col-xs\">\n            {description.childMarkdownRemark.rawMarkdownBody}\n          </p>\n        }\n      </div>\n    </TopBannerBackground>\n  )\n}\n\nexport default TopBanner\n","import * as React from \"react\"\n\nimport \"./aplication-areas.scss\"\n\nconst AplicationAreas = ({ items }) => {\n  const advantagesTrustedItems = items?.content || []\n\n  return (\n    <section className=\"aplication-areas container\">\n      {Boolean(items?.name) &&\n        <div className=\"aplication-areas__name subtitle-1 col-xs-12\">\n          {items.name}\n        </div>\n      }\n      {Boolean(items?.title) &&\n        <h2 className=\"aplication-areas__title col-xs-12\">\n          {items.title}\n        </h2>\n      }\n      <div className=\"aplication-areas__inner-wrap col-xs-12\">\n        {advantagesTrustedItems.map((props, id) => (\n          <AplicationAreasItem key={id.toString()} {...props} />\n        ))}\n      </div>\n    </section>\n  )\n}\n\nconst AplicationAreasItem = ({ image, heading, description }) => (\n  <div className=\"aplication-areas__item\">\n    <img src={image.file.url} alt=\"\" className=\"aplication-areas__image\" />\n    <div className=\"aplication-areas__content\">\n      <h4 className=\"aplication-areas__heading\">{heading}</h4>\n      {Boolean(description?.childMarkdownRemark) &&\n        <p className=\"aplication-areas__description\">\n          {description.childMarkdownRemark.rawMarkdownBody}\n        </p>\n      }\n    </div>\n  </div>\n)\n\nexport default AplicationAreas\n","import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport TopPageBanner from \"../components/top-banner/top-banner\"\nimport PageText from \"../components/page-text/page-text\"\nimport AdvantagesTrusted from \"../components/advantages-trusted/advantages-trusted\"\nimport AplicationAreas from \"../components/aplication-areas/aplication-areas\"\nimport FeedbackForm from \"../components/feedback-form/feedback-form\"\n\nimport {\n  findByInternalName,\n  ComponentInternalName,\n} from \"../components/component-internal-name\"\nimport { filterPageLocale, Locale } from \"../components/locale-provider\"\n\nconst locale = Locale.Ua\n\nexport default ({ pageContext: { page, allLocales } }) => {\n  // const localizedPage = filterPageLocale(page, locale)\n  // const localizedPage = page\n\n  const hempcretePageTopBanner = findByInternalName(\n    page,\n    ComponentInternalName.HempcreteTopBanner\n  )\n  const hempcretePageText = findByInternalName(\n    page,\n    ComponentInternalName.HempcretePageText\n  )\n  const hempcreteAdvantagesTrusted = findByInternalName(\n    page,\n    ComponentInternalName.HempcreteAdvantagesTrusted\n  )\n  const hempcreteBenefitsTrusted = findByInternalName(\n    page,\n    ComponentInternalName.HempcreteBenefitsTrusted\n  )\n  const hempcreteAplicationAreas = findByInternalName(\n    page,\n    ComponentInternalName.HempcreteAplicationAreas\n  )\n\n  const feedbackForm = findByInternalName(\n    page,\n    ComponentInternalName.FeedbackForm\n  )\n\n  return (\n    <Layout  allLocales={allLocales} currentLocale={page.node_locale}>\n      <TopPageBanner {...hempcretePageTopBanner} />\n      <PageText text={hempcretePageText} />\n      <AplicationAreas items={hempcreteAplicationAreas} />\n      <AdvantagesTrusted items={hempcreteAdvantagesTrusted}/>\n      <AdvantagesTrusted items={hempcreteBenefitsTrusted}/>\n      <FeedbackForm {...feedbackForm}/>\n    </Layout>\n  )\n}\n"],"sourceRoot":""}