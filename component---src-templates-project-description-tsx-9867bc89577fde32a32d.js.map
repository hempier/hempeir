{"version":3,"sources":["webpack://gatsby-starter-default/./src/components/top-banner/top-banner.tsx","webpack://gatsby-starter-default/./src/components/project-tech-info/project-tech-info.tsx","webpack://gatsby-starter-default/./src/components/gallery/gallery.tsx","webpack://gatsby-starter-default/./src/components/project-gallery/project-gallery.tsx","webpack://gatsby-starter-default/./src/components/project-text/project-text.tsx","webpack://gatsby-starter-default/./src/templates/project-description.tsx"],"names":["props","heading","description","image","TopBannerBackground","file","url","className","Boolean","childMarkdownRemark","rawMarkdownBody","title","characteristics","src","alt","map","item","id","key","toString","techItemLabel","techItemValue","children","React","nav1","setNav1","nav2","setNav2","slider1","setSlider1","slider2","setSlider2","useEffect","settingsMain","slidesToShow","slidesToScroll","arrows","fade","asNavFor","prevArrow","onClick","nextArrow","ref","slider","dots","centerMode","swipeToSlide","focusOnSelect","responsive","breakpoint","settings","infinite","GalleryItem","component","contentPresent","content","name","text","renderAst","htmlAst","Locale","pageContext","page","allLocales","projectTopBanner","findByInternalName","ComponentInternalName","projectDetails","projectGallery","projectText","plpFeedbackForm","currentLocale","node_locale"],"mappings":"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","file":"component---src-templates-project-description-tsx-9867bc89577fde32a32d.js","sourcesContent":["import * as React from \"react\"\nimport styled from \"@emotion/styled\"\nimport { css } from \"@emotion/react\"\n\nimport \"./top-banner.scss\"\n\n\n\nconst TopBanner = (props) => {\n  const { heading, description, image } = props\n\n  const TopBannerBackground = styled.div`\n    background-repeat: no-repeat;\n    background-position: center;\n    background-size: cover;\n    background-image: url(${image?.file.url || []});\n  `\n  return (\n    <TopBannerBackground className=\"top-banner\">\n      <div className=\"top-banner__inner-wrap container\">\n        <h1 className=\"top-banner__title col-xs\">{heading}</h1>\n        {Boolean(description?.childMarkdownRemark) &&\n          <p className=\"top-banner__description col-xs\">\n            {description.childMarkdownRemark.rawMarkdownBody}\n          </p>\n        }\n      </div>\n    </TopBannerBackground>\n  )\n}\n\nexport default TopBanner\n","import * as React from \"react\"\n\nimport \"./project-tech-info.scss\"\n\nconst ProjectTechInfo = ({\n  image,\n  title,\n  characteristics,\n}) => {\n  return (\n    <section className=\"project-tech container\">\n      <div className=\"project-tech__inner-wrap\">\n        <div className=\"project-tech__image col-xs-12 col-lg-6\">\n          <img src={image.file.url} alt=\"\" />\n        </div>\n        <div className=\"project-tech__content col-xs-12 col-lg-5 off-lg-1\">\n          <h2 className=\"project-tech__title\">{title}</h2>\n          <ul className=\"project-tech__info\">\n              {characteristics.map((item, id) => (\n                <li className=\"project-tech__info-item\" key={id.toString()}>\n                  <strong className=\"project-tech__label\">{item.techItemLabel}</strong>\n                  <span className=\"project-tech__value\">{item.techItemValue}</span>\n                </li>\n              )) }\n          </ul>\n        </div>\n      </div>\n    </section>\n  )\n}\n\nexport default ProjectTechInfo\n","import React, { useState, useRef, useEffect } from \"react\"\nimport Slider from \"react-slick\"\nimport ArrowPrev from \"../../images/slider/arrow-prev.svg\"\nimport ArrowNext from \"../../images/slider/arrow-next.svg\"\n\nimport \"./vendor/slick-theme.scss\"\nimport \"./vendor/slick.scss\"\nimport \"./gallery.scss\"\n\nconst SimpleGallery = ({ children }) => {\n  const [nav1, setNav1] = React.useState(null);\n  const [nav2, setNav2] = React.useState(null);\n  const [slider1, setSlider1] = React.useState(null);\n  const [slider2, setSlider2] = React.useState(null);\n\n  useEffect(() => {\n    setNav1(slider1);\n    setNav2(slider2);\n  })\n\n  const settingsMain = {\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    arrows: true,\n    fade: true,\n    asNavFor: '.gallery-nav',\n    className: 'gallery',\n    prevArrow: <SamplePrevArrow />,\n    nextArrow: <SampleNextArrow />\n  };\n\n  const settingsThumbs = {\n    slidesToShow: 4,\n    slidesToScroll: 1,\n    arrows: false,\n    asNavFor: '.gallery-for',\n    className: 'gallery-thumbs',\n    dots: false,\n    centerMode: false,\n    swipeToSlide: true,\n    focusOnSelect: true,\n    responsive: [\n      {\n        breakpoint: 1140,\n        settings: {\n          slidesToShow: 3,\n          slidesToScroll: 1,\n          infinite: true,\n        }\n      },\n      {\n        breakpoint: 700,\n        settings: {\n          slidesToShow: 3,\n          slidesToScroll: 1\n        }\n      },\n      {\n        breakpoint: 500,\n        settings: {\n          slidesToShow: 2,\n          slidesToScroll: 1\n        }\n      }\n    ]\n  };\n\n  function SamplePrevArrow(props) {\n    const { onClick } = props;\n    return (\n      <ArrowPrev\n        className='gallery__arrow gallery__arrow_prev'\n        onClick={onClick}\n      />\n    );\n  }\n\n  function SampleNextArrow(props) {\n    const { onClick } = props;\n    return (\n      <ArrowNext\n        className=\"gallery__arrow gallery__arrow_next\"\n        onClick={onClick}\n      />\n    );\n  }\n\n  return (\n    <>\n      <div className=\"gallery-wrapper\">\n        <Slider\n          {...settingsMain}\n          asNavFor={nav2}\n          ref={slider => (setSlider1(slider))}>\n            {children}\n        </Slider>\n      </div>\n      <div className=\"thumbnail-gallery-wrapper\">\n        <Slider\n          {...settingsThumbs}\n          asNavFor={nav1}\n          ref={slider => (setSlider2(slider))}>\n            {children}\n        </Slider>\n      </div>\n    </>\n  )\n}\n\nexport default SimpleGallery\n","import * as React from \"react\"\nimport \"./project-gallery.scss\"\nimport SimpleGallery from \"../gallery/gallery\"\n\nconst ProjectGallery = ({ component }) => {\n  const contentPresent = Boolean(component?.content)\n  const content = component.content\n\n  // console.log('test'+JSON.stringify(content, null, 4))\n\n  if (!contentPresent) {\n    return <div>no content</div>\n  }\n\n  return (\n    <section className=\"project-gallery col-xs-12\">\n      <span className=\"project-gallery__name subtitle-2\">\n        {component.name}\n      </span>\n      <h2 className=\"project-gallery__title\">{component.title}</h2>\n      <div className=\"project-gallery__inner-wrap\">\n        <SimpleGallery>\n          {content.map((props, id) => (\n            <GalleryItem key={id.toString()} {...props} />\n          ))}\n        </SimpleGallery>\n      </div>\n    </section>\n  )\n}\n\nconst GalleryItem = ({ image }) => (\n  <div className=\"project-gallery__item\">\n    <img\n      src={image?.file.url || []}\n      className=\"project-gallery__image\"\n    />\n  </div>\n)\n\nexport default ProjectGallery\n","import * as React from \"react\"\nimport renderAst from \"../util-html-to-react\";\n\nimport \"./project-text.scss\"\n\nconst PageText = props => {\n  const { text } = props\n\n  return (\n    <div className=\"project-text col-xs-12\">\n      {renderAst(text?.text.childMarkdownRemark.htmlAst || [])}\n    </div>\n  )\n}\n\nexport default PageText\n","import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport TopPageBanner from \"../components/top-banner/top-banner\"\nimport ProjectsDetails from \"../components/project-tech-info/project-tech-info\"\nimport ProjectGallery from \"../components/project-gallery/project-gallery\"\nimport ProjectText from \"../components/project-text/project-text\"\nimport FeedbackForm from \"../components/feedback-form/feedback-form\"\n\nimport {\n  findByInternalName,\n  ComponentInternalName,\n} from \"../components/component-internal-name\"\nimport { filterPageLocale, Locale } from \"../components/locale-provider\"\n\nconst locale = Locale.Ua\n\nexport default ({ pageContext: { page, allLocales } }) => {\n  // const localizedPage = filterPageLocale(page, locale)\n  // const localizedPage = page\n\n  const projectTopBanner = findByInternalName(\n    page,\n    ComponentInternalName.ProjectTechTopBanner\n  )\n  const projectDetails = findByInternalName(\n    page,\n    ComponentInternalName.ProjectTechDetails\n  )\n  const projectGallery = findByInternalName(\n    page,\n    ComponentInternalName.ProjectGallery\n  )\n  const projectText = findByInternalName(\n    page,\n    ComponentInternalName.ProjectText\n  )\n  const plpFeedbackForm = findByInternalName(\n    page,\n    ComponentInternalName.FeedbackForm\n  )\n\n  return (\n    <Layout  allLocales={allLocales} currentLocale={page.node_locale}>\n      <TopPageBanner {...projectTopBanner} />\n      <ProjectsDetails {...projectDetails} />\n       <section className=\"project-info\">\n        <div className=\"project-info__inner-wrap\">\n          <ProjectGallery component={projectGallery}/>\n          <ProjectText text={projectText}/>\n        </div>\n      </section>\n      <FeedbackForm {...plpFeedbackForm} />\n    </Layout>\n  )\n}\n"],"sourceRoot":""}