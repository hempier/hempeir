{"version":3,"sources":["webpack://gatsby-starter-default/./src/components/component-internal-name.ts","webpack://gatsby-starter-default/./src/components/locale-provider.tsx","webpack://gatsby-starter-default/./src/components/partners-about-us-slider/partners-about-us-slider.tsx","webpack://gatsby-starter-default/./src/components/slider/slider.tsx","webpack://gatsby-starter-default/./src/components/hero-slider/hero-slider.tsx","webpack://gatsby-starter-default/./src/components/information-section/information-section.tsx","webpack://gatsby-starter-default/./src/components/products-slider/products-slider.tsx","webpack://gatsby-starter-default/./src/components/services-trusted/services-trusted.tsx","webpack://gatsby-starter-default/./src/components/projects-slider/projects-slider.tsx","webpack://gatsby-starter-default/./src/templates/home.tsx"],"names":["ComponentInternalName","findByInternalName","page","name","content","find","x","internalName","Locale","ProductsSliderItem","image","link","href","target","className","src","file","url","alt","title","component","Boolean","partnersAboutUsSliderSettings","dots","slidesToShow","length","responsive","breakpoint","settings","slidesToScroll","infinite","customSettings","map","props","id","key","toString","children","slider","React","useEffect","arrows","speed","initialSlide","onClick","current","slickPrev","slickNext","renderArrows","ref","HeroSliderSettings","HeroSliderItem","description","ctaText","ctaLink","externalCtaLink","currentLocale","sliderItemImage","backgroundImage","childMarkdownRemark","rawMarkdownBody","slug","Link","to","style","items","informationSectionImage","productsSliderSettings","productSlug","contentPresent","ServicesTrustedItem","shortDescription","serviceSlug","projectsSliderSettings","ProjectsSliderItem","projectSlug","pageContext","allLocales","heroSliderItems","infoSectionAboutUs","infoSectionHempcrete","productsSlider","servicesTrusted","projectsSlider","partnersAboutUsSlider","node_locale"],"mappings":"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","file":"component---src-templates-home-tsx-84dfe8ecff1f92581547.js","sourcesContent":["export enum ComponentInternalName {\n  HeroSlider = \"hero slider\",\n  InfoSectionAboutUs = \"info-section-about-us\",\n  InfoSectionHempcrete = \"info-section-hempcrete\",\n  ProductSlider = \"products-slider\",\n  PartnersAboutUsSlider = \"partners-about-us\",\n  AboutPartnersAboutUsSlider = \"about-partners-about-us\",\n  AboutPageTopBanner = \"about-page-top-banner\",\n  AboutPageAwards = \"about-us-awards\",\n  ProjectsSlider = \"projects-slider\",\n  AboutPageText = \"about-page-text\",\n  HempcreteTopBanner = \"hempcrete-page-top-banner\",\n  HempcretePageText = \"hempcrete-page-text\",\n  HempcreteAdvantagesTrusted = \"hempcrete-advantages-trusted\",\n  HempcreteBenefitsTrusted = \"hempcrete-environmental-benefits\",\n  HempcreteAplicationAreas = \"hempcrete-aplication-areas\",\n  FeedbackForm = \"feedback-form\",\n  PlpTopBanner = \"plp-top-banner\",\n  ProductsList = \"products-list\",\n  PlpInformationAdvertisement = \"plp-information-advertisement\",\n\n  PdpFifthElementDescription = \"product-description\",\n  PdpFifthElementUsages = \"product-usages\",\n  PdpFifthElementTechInfo = \"technical-information\",\n\n  ContactTopBanner = \"contact-top-banner\",\n  ContactAddress = \"contact-address\",\n  ContactFeedbackForm = \"feedback-form\",\n  \n  ProjectsListTopBanner = \"projects-list-top-banner\",\n  ProjectsList = \"projects-list\",\n  ProjectTechTopBanner = \"project-top-banner\",\n  ProjectTechDetails = \"project-details\",\n  ProjectGallery = \"project-gallery\",\n  ProjectText = \"project-text\",\n\n  ServicesTrusted = \"services-trusted\",\n  ServicesListTopBanner = \"services-top-banner\",\n  ServicesList = \"services-list\",\n  ServiceTopBanner = \"service-top-banner\",\n  ServiceAplicationAreas = \"service-aplication-areas\",\n\n  CarbonDioxidCounter = \"carbon-dioxid-counter\",\n\n  CostCaslculatorTopBanner = \"top-banner\",\n  CostCaslculatorPageText = \"page-text\",\n  CostCaslculator = \"cost-calculator\",\n}\n\nexport function findByInternalName(page: any, name: ComponentInternalName) {\n return page.content.find(x => x.internalName === name)\n}","export enum Locale {\n    Ua = \"uk-UA\",\n    Ru = \"ru-RU\"\n}\n\nexport function filterPageLocale(page: any, locale: Locale) {\n    return {\n        ...page,\n        content: filterNodesLocale(page.content, locale),\n    }\n}\n\nfunction filterNodesLocale(nodes: any[], locale: Locale) {\n    return nodes\n    .filter(node => node.node_locale === locale )\n    .reduce((nodes, node) => {\n        const filteredNode = { ...node }\n\n        if (filteredNode.content) {\n            filteredNode.content = filterNodesLocale(filteredNode.content, locale)\n        }\n\n        nodes.push(node)\n\n        return nodes\n    }, [])\n}\n\n","import * as React from \"react\"\nimport \"./partners-about-us-slider.scss\"\nimport SimpleSlider from \"../slider/slider\"\n\nconst PartnersAboutUs = ({ component }) => {\n  const contentPresent = Boolean(component?.content)\n  if (!contentPresent) {\n    return <div>no content</div>\n  }\n\n  const content = component.content\n\n  const partnersAboutUsSliderSettings = {\n    dots: false,\n    slidesToShow: content.length >= 4 ? 4 : content.length,\n    responsive: [\n      {\n        breakpoint: 1140,\n        settings: {\n          slidesToShow: 3,\n          slidesToScroll: 1,\n          infinite: true,\n        }\n      },\n      {\n        breakpoint: 768,\n        settings: {\n          slidesToShow: 1,\n          slidesToScroll: 1\n        }\n      }\n    ]\n  }\n\n  return (\n    <section className=\"partners-about-us container\">\n      <span className=\"partners-about-us__name subtitle-2 col-xs-12\">\n        {component.name}\n      </span>\n      <h2 className=\"partners-about-us__title col-xs-12\">{component.title}</h2>\n      <div className=\"partners-about-us__inner-wrap col-xs-12\">\n        <SimpleSlider customSettings={partnersAboutUsSliderSettings}>\n          {content.map((props, id) => (\n            <ProductsSliderItem key={id.toString()} {...props} />\n          ))}\n        </SimpleSlider>\n      </div>\n    </section>\n  )\n}\n\nconst ProductsSliderItem = ({ image, link }) => (\n  <a href={link} target=\"_blank\" className=\"partners-about-us__item\">\n    <img\n      src={image.file.url}\n      alt={image.title}\n      className=\"partners-about-us__image\"\n    />\n  </a>\n)\n\nexport default PartnersAboutUs\n","import React, { useRef, useEffect } from \"react\"\nimport Slider from \"react-slick\"\nimport ArrowPrev from \"../../images/slider/arrow-prev.svg\"\nimport ArrowNext from \"../../images/slider/arrow-next.svg\"\n\nimport \"./vendor/slick-theme.scss\"\nimport \"./vendor/slick.scss\"\nimport \"./slider.scss\"\n\nconst SimpleSlider = ({ children, customSettings = {} }) => {\n  let slider = React.useRef(null)\n\n  useEffect(() => {\n    // console.log(slider.current)\n  }, [slider])\n\n  const settings = {\n    dots: false,\n    arrows: false,\n    className: 'slider',\n    infinite: true,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    responsive: [\n      {\n        breakpoint: 1140,\n        settings: {\n          slidesToShow: 3,\n          slidesToScroll: 3,\n          infinite: true,\n          dots: true,\n        },\n      },\n      {\n        breakpoint: 600,\n        settings: {\n          slidesToShow: 2,\n          slidesToScroll: 2,\n          initialSlide: 2,\n        },\n      },\n      {\n        breakpoint: 480,\n        settings: {\n          slidesToShow: 1,\n          slidesToScroll: 1,\n        },\n      },\n    ],\n    ...customSettings,\n  }\n\n  const renderArrows = ({ slider }) => {\n    return (\n      <div className=\"slider-arrow\">\n        <div\n          className=\"slider-arrow__prev\"\n          onClick={() => slider.current.slickPrev()}\n        >\n          <ArrowPrev className=\"slider-arrow__prev\" />\n        </div>\n        <div\n          className=\"slider-arrow__next\"\n          onClick={() => slider.current.slickNext()}\n        >\n          <ArrowNext className=\"slider-arrow__next\" />\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <>\n      {renderArrows({ slider })}\n      <Slider ref={slider} {...settings}>\n        {children}\n      </Slider>\n    </>\n  )\n}\n\nexport default SimpleSlider\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport SimpleSlider from \"../slider/slider\"\nimport \"./hero-slider.scss\"\n\nconst HeroSliderSettings = {\n  responsive: [\n    {\n      breakpoint: 1140,\n      settings: {\n        slidesToShow: 1,\n      },\n    },\n  ],\n}\n\nconst HeroSlider = ({ items, currentLocale }) => (\n  <section className=\"hero-slider\">\n    <SimpleSlider customSettings={HeroSliderSettings}>\n      {items.map((props, id) => (\n        <HeroSliderItem\n          key={id.toString()}\n          {...props}\n          currentLocale={currentLocale}\n        />\n      ))}\n    </SimpleSlider>\n  </section>\n)\n\nconst HeroSliderItem = ({\n  name,\n  title,\n  description,\n  ctaText,\n  ctaLink,\n  externalCtaLink,\n  image,\n  currentLocale,\n}) => {\n  const sliderItemImage = {\n    backgroundImage: `url(${image.file.url})`,\n  }\n  return (\n    <div className=\"hero-slider__item\">\n      <div className=\"hero-slider__inner-wrap container\">\n        <div className=\"hero-slider__text\">\n          <span className=\"hero-slider__name subtitle-1\">{name}</span>\n          <h1 className=\"hero-slider__title\">{title}</h1>\n          <p className=\"hero-slider__description\">\n            {description.childMarkdownRemark.rawMarkdownBody}\n          </p>\n          {Boolean(ctaLink?.slug) && (\n            <Link\n              to={ctaLink ? `/${currentLocale}/${ctaLink.slug}` : null}\n              className=\"hero-slider__cta cta-link\"\n            >\n              {ctaText}\n            </Link>\n          )}\n          {/* {Boolean(externalCtaLink !== null) && (\n            <a \n              href={externalCtaLink}\n              target=\"_blank\"\n              className=\"hero-slider__cta cta-link\"\n            >\n              {ctaText}\n            </a>\n          )} */}\n        </div>\n        <div className=\"hero-slider__image\" style={sliderItemImage} />\n      </div>\n    </div>\n  )\n}\n\nexport default HeroSlider\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport \"./information-section.scss\"\n\nconst InformationSection = ({\n  name,\n  title,\n  description,\n  ctaText,\n  image,\n  ctaLink,\n  currentLocale,\n}) => {\n  const informationSectionImage = {\n    backgroundImage: `url(${image.file.url})`,\n  }\n\n  return (\n    <section className=\"information-section\">\n      <div className=\"information-section__inner-wrap container row\">\n        <div\n          className=\"information-section__image col-xs-12 col-md-6\"\n          style={informationSectionImage}\n        />\n        <div className=\"information-section__text col-xs-12 col-md-5 off-md-1\">\n          <div className=\"information-section__subtitle subtitle-2\">{name}</div>\n          <h2 className=\"information-section__title\">{title}</h2>\n          <p className=\"information-section__description\">\n            {description.childMarkdownRemark.rawMarkdownBody}\n          </p>\n          {ctaText ? (\n            <Link\n              to={\n                ctaLink\n                  ? `/${currentLocale}/${ctaLink.slug}`\n                  : null\n              }\n              className=\"information-section__cta cta-link\"\n            >\n              {ctaText}\n            </Link>\n          ) : null}\n        </div>\n      </div>\n    </section>\n  )\n}\n\nexport default InformationSection\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport \"./products-slider.scss\"\nimport SimpleSlider from \"../slider/slider\"\n\nconst productsSliderSettings = {\n  arrows: false,\n  infinite: true,\n  speed: 500,\n  slidesToShow: 3,\n  slidesToScroll: 1,\n  className: 'products-slider',\n  responsive: [\n    {\n      breakpoint: 1140,\n      settings: {\n        slidesToShow: 3,\n        slidesToScroll: 1,\n        infinite: true,\n      }\n    },\n    {\n      breakpoint: 700,\n      settings: {\n        slidesToShow: 2,\n        slidesToScroll: 1\n      }\n    },\n    {\n      breakpoint: 500,\n      settings: {\n        slidesToShow: 1,\n        slidesToScroll: 1\n      }\n    }\n  ]\n}\n\n\nconst ProductsSlider = ({ component, currentLocale }) => {\n  const contentPresent = Boolean(component?.content)\n  const content = component.content\n\n  if (!contentPresent) {\n    return <div>no content</div>\n  }\n\n  return (\n    <section className=\"products-slider container\">\n      <span className=\"products-slider__name subtitle-2 col-xs\">{component.name}</span>\n      <h2 className=\"products-slider__title col-xs\">{component.title}</h2>\n      <div className=\"products-slider__inner-wrap col-xs\">\n        <SimpleSlider customSettings={productsSliderSettings}>\n          {content.map((props, id) => (\n            <ProductsSliderItem key={id.toString()} {...props} currentLocale={currentLocale} />\n          ))}\n        </SimpleSlider>\n      </div>\n    </section>\n  )\n}\n\nconst ProductsSliderItem = ({ image, title, description, ctaText, ctaLink, currentLocale }) => (\n  <Link to={ctaLink ? `/${currentLocale}/plp/${ctaLink.productSlug}` : null} className=\"products-slider__item\">\n    <div className=\"products-slider__image-wrap\">\n      <img src={image?.file.url || []} alt=\"\" className=\"products-slider__image\"/>\n    </div>\n    <h3 className=\"products-slider__heading\">{title}</h3>\n    <p className=\"products-slider__description\">\n      {description.childMarkdownRemark.rawMarkdownBody}\n    </p>\n    <span className=\"products-slider__cta learn-more\">\n      {ctaText}\n    </span>\n  </Link>\n)\n\nexport default ProductsSlider\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport \"./services-trusted.scss\"\n\nconst ServicesTrusted = ({ component, currentLocale }) => {\n  const contentPresent = Boolean(component?.content)\n  const content = component.content\n\n  if (!contentPresent) {\n    return <div>no content</div>\n  }\n\n  return (\n    <section className=\"services-trusted container\">\n      <span className=\"services-trusted__name subtitle-2 col-xs\">\n        {component.name}\n      </span>\n      <h2 className=\"services-trusted__title col-xs\">{component.title}</h2>\n      <div className=\"services-trusted__inner-wrap col-xs\">\n        {content.map((props, id) => (\n          <ServicesTrustedItem\n            key={id.toString()}\n            {...props}\n            currentLocale={currentLocale}\n          />\n        ))}\n      </div>\n    </section>\n  )\n}\n\nconst ServicesTrustedItem = ({\n  image,\n  title,\n  shortDescription,\n  ctaText,\n  ctaLink,\n  currentLocale,\n}) => (\n  // @TODO: remove static declaration of 'service list' page\n  <Link\n    to={\n      ctaLink ? `/${currentLocale}/services-list/${ctaLink.serviceSlug}` : null\n    }\n    className=\"services-trusted__item\"\n  >\n    <div className=\"services-trusted__content-wrap\">\n      <h4 className=\"services-trusted__heading\">{title}</h4>\n      <p className=\"services-trusted__description\">{shortDescription}</p>\n      <span className=\"services-trusted__cta learn-more\">\n        {ctaText}\n      </span>\n    </div>\n    <img src={image.file.url} alt=\"\" className=\"services-trusted__image\" />\n  </Link>\n)\n\nexport default ServicesTrusted\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport \"./projects-slider.scss\"\nimport SimpleSlider from \"../slider/slider\"\n\nconst projectsSliderSettings = {\n  dots: false,\n  arrows: false,\n  infinite: true,\n  speed: 500,\n  slidesToShow: 3,\n  slidesToScroll: 1,\n  className: 'projects-slider',\n  responsive: [\n    {\n      breakpoint: 1140,\n      settings: {\n        slidesToShow: 3,\n        slidesToScroll: 1,\n        infinite: true,\n      }\n    },\n    {\n      breakpoint: 700,\n      settings: {\n        slidesToShow: 2,\n        slidesToScroll: 1\n      }\n    },\n    {\n      breakpoint: 500,\n      settings: {\n        slidesToShow: 1,\n        slidesToScroll: 1\n      }\n    }\n  ]\n}\n\nconst ProjectsSlider = ({ component, currentLocale }) => {\n  const contentPresent = Boolean(component?.content)\n  const content = component.content\n\n  if (!contentPresent) {\n    return <div>no content</div>\n  }\n\n  return (\n    <section className=\"projects-slider container\">\n      <span className=\"projects-slider__name subtitle-2 col-xs\">{component.name}</span>\n      <h2 className=\"projects-slider__title col-xs\">{component.title}</h2>\n      <div className=\"projects-slider__inner-wrap col-xs\">\n        <SimpleSlider customSettings={projectsSliderSettings}>\n          {content.map((props, id) => (\n            <ProjectsSliderItem key={id.toString()} {...props} currentLocale={currentLocale}/>\n          ))}\n        </SimpleSlider>\n      </div>\n    </section>\n  )\n}\n\nconst ProjectsSliderItem = ({ image, title, description, ctaText, ctaLink, currentLocale }) => (\n  <Link to={ctaLink ? `/${currentLocale}/projects-list/${ctaLink.projectSlug}` : null} className=\"projects-slider__item\">\n    <img src={image.file.url} alt=\"\" className=\"projects-slider__image\"/>\n    <div className=\"projects-slider__content\">\n      <h4 className=\"projects-slider__heading\">{title}</h4>\n      <div className=\"projects-slider__content-inner\">\n        <p className=\"projects-slider__description\">\n          {description.childMarkdownRemark.rawMarkdownBody}\n        </p>\n        <span className=\"projects-slider__cta learn-more learn-more_light\">\n          {ctaText}\n        </span>\n      </div>\n    </div>\n  </Link>\n)\n\nexport default ProjectsSlider\n","import React from \"react\"\nimport HeroSlider from \"../components/hero-slider/hero-slider\"\nimport InformationSection from \"../components/information-section/information-section\"\nimport ProductsSlider from \"../components/products-slider/products-slider\"\nimport ServicesTrusted from \"../components/services-trusted/services-trusted\"\nimport ProjectsSlider from \"../components/projects-slider/projects-slider\"\nimport PartnersAboutUsSlider from \"../components/partners-about-us-slider/partners-about-us-slider\"\n\nimport Layout from \"../components/layout\"\n\nimport {\n  findByInternalName,\n  ComponentInternalName,\n} from \"../components/component-internal-name\"\nimport { filterPageLocale, Locale } from \"../components/locale-provider\"\n\nconst locale = Locale.Ua\n\nexport default ({ pageContext: { page, allLocales } }) => {\n  // const localizedPage = filterPageLocale(page, locale)\n  // const localizedPage = page\n\n  // console.log(JSON.stringify(page, null, 4))\n\n\n  const heroSliderItems =\n    findByInternalName(page, ComponentInternalName.HeroSlider)\n      ?.content || []\n  const infoSectionAboutUs = findByInternalName(\n    page,\n    ComponentInternalName.InfoSectionAboutUs\n  )\n  const infoSectionHempcrete = findByInternalName(\n    page,\n    ComponentInternalName.InfoSectionHempcrete\n  )\n  const productsSlider = findByInternalName(\n    page,\n    ComponentInternalName.ProductSlider\n  )\n  const servicesTrusted = findByInternalName(\n    page,\n    ComponentInternalName.ServicesTrusted\n  )\n  const projectsSlider = findByInternalName(\n    page,\n    ComponentInternalName.ProjectsSlider\n  )\n  const partnersAboutUsSlider = findByInternalName(\n    page,\n    ComponentInternalName.PartnersAboutUsSlider\n  )\n\n  return (\n    <Layout  allLocales={allLocales} currentLocale={page.node_locale}>\n      <HeroSlider items={heroSliderItems} currentLocale={page.node_locale}/>\n      <InformationSection {...infoSectionAboutUs} currentLocale={page.node_locale} />\n      <PartnersAboutUsSlider component={partnersAboutUsSlider} />\n      <InformationSection {...infoSectionHempcrete} currentLocale={page.node_locale} />\n      <ProductsSlider component={productsSlider} currentLocale={page.node_locale}/>\n      <ServicesTrusted component={servicesTrusted} currentLocale={page.node_locale} />\n      <ProjectsSlider component={projectsSlider} currentLocale={page.node_locale}/>\n    </Layout>\n  )\n}\n"],"sourceRoot":""}