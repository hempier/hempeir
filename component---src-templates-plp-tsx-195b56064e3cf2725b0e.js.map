{"version":3,"sources":["webpack://gatsby-starter-default/./src/components/advertisement/advertisement.tsx","webpack://gatsby-starter-default/./src/components/feedback-form/feedback-form.tsx","webpack://gatsby-starter-default/./src/components/top-banner/top-banner.tsx","webpack://gatsby-starter-default/./src/components/products-list/products-list.tsx","webpack://gatsby-starter-default/./src/templates/plp.tsx"],"names":["title","description","ctaText","currentLocale","className","childMarkdownRemark","rawMarkdownBody","Link","to","props","image","subtitle","nameFieldLable","phoneFieldLable","emailFieldLable","commentsFieldLable","FeedbackFromBackground","file","url","React","submitting","status","setServerState","handleServerResponse","ok","msg","form","reset","onSubmit","e","preventDefault","target","axios","method","data","FormData","then","r","catch","response","error","id","htmlFor","required","type","name","heading","TopBannerBackground","Boolean","ProductsListItem","ctaLink","listingPage","productSlug","src","alt","component","contentPresent","content","map","key","toString","Locale","pageContext","page","allLocales","plpPageTopBanner","findByInternalName","ComponentInternalName","productsList","plpInformationAdv","plpFeedbackForm","node_locale","slug"],"mappings":"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","file":"component---src-templates-plp-tsx-195b56064e3cf2725b0e.js","sourcesContent":["import * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport \"./advertisement.scss\"\n\nconst Advertisement = ({\n  title,\n  description,\n  ctaText,\n  currentLocale\n}) => {\n  return (\n    <section className=\"promo container\">\n      <div className=\"promo__inner-wrap row\">\n        <h2 className=\"promo__title\">{title}</h2>\n        <p className=\"promo__description\">\n          {description.childMarkdownRemark.rawMarkdownBody}\n        </p>\n        {ctaText ? (\n          <Link\n            to={`/${currentLocale}/hempcrete`}\n            className=\"promo__cta cta-link cta-link_promo\"\n          >\n            {ctaText}\n          </Link>\n        ) : null}\n      </div>\n    </section>\n  )\n}\n\nexport default Advertisement\n","import * as React from \"react\"\nimport styled from \"@emotion/styled\"\nimport axios from \"axios\";\n\nimport \"./feedback-form.scss\"\n\nconst FeedbackForm = props => {\n  const {\n    image,\n    title,\n    subtitle,\n    nameFieldLable,\n    phoneFieldLable,\n    emailFieldLable,\n    commentsFieldLable,\n    ctaText,\n  } = props\n\n  const FeedbackFromBackground = styled.div`\n    background-repeat: no-repeat;\n    background-position: center;\n    background-size: cover;\n    background-image: url(${image.file.url});\n  `\n\n  const [serverState, setServerState] = React.useState({\n    submitting: false,\n    status: null\n  });\n\n  const handleServerResponse = (ok, msg, form) => {\n    setServerState({\n      submitting: false,\n      status: { ok, msg }\n    });\n    if (ok) {\n      form.reset();\n    }\n  };\n  \n  const handleOnSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    setServerState({ submitting: true });\n    axios({\n      method: \"post\",\n      url: \"https://getform.io/f/fd79ffaa-e0d5-42b2-b125-41458a780f9e\",\n      data: new FormData(form)\n    })\n      .then(r => {\n        handleServerResponse(true, \"Thanks!\", form);\n      })\n      .catch(r => {\n        handleServerResponse(false, r.response.data.error, form);\n      });\n  };\n\n  return (\n    <FeedbackFromBackground className=\"feedback-form col-xs\">\n      <div className=\"container\">\n        <div className=\"feedback-form__inner-wrap col-xs-12\">\n          <h2 className=\"feedback-form__title\">{title}</h2>\n          <p className=\"feedback-form__subtitle\">{subtitle}</p>\n          <form onSubmit={handleOnSubmit} className=\"feedback-form__form form-body\" id=\"feedback-form\">\n            <div className=\"feedback-form__fieldset form-fieldset\">\n              <label htmlFor=\"name\" className=\"feedback-form__label form-label\">\n                {nameFieldLable}\n              </label>\n              <input\n                required\n                type=\"text\"\n                id=\"name\"\n                name=\"name\"\n                className=\"feedback-form__input form-input\"\n              />\n            </div>\n            <div className=\"feedback-form__fieldset form-fieldset\">\n              <label\n                htmlFor=\"phone\"\n                className=\"feedback-form__label form-label\"\n              >\n                {phoneFieldLable}\n              </label>\n              <input\n                required\n                type=\"phone\"\n                id=\"phone\"\n                name=\"phone\"\n                className=\"feedback-form__input form-input\"\n              />\n            </div>\n            <div className=\"feedback-form__fieldset form-fieldset\">\n              <label\n                htmlFor=\"email\"\n                className=\"feedback-form__label form-label\"\n              >\n                {emailFieldLable}\n              </label>\n              <input\n                required\n                type=\"email\"\n                id=\"email\"\n                name=\"email\"\n                className=\"feedback-form__input form-input\"\n              />\n            </div>\n            <div className=\"feedback-form__fieldset form-fieldset\">\n              <label\n                htmlFor=\"comment\"\n                className=\"feedback-form__label form-label\"\n              >\n                {commentsFieldLable}\n              </label>\n              <input\n                type=\"text\"\n                id=\"comment\"\n                name=\"comment\"\n                className=\"feedback-form__input form-input\"\n              />\n            </div>\n            <button type=\"submit\" className=\"feedback-form__submit cta-link\">\n              {ctaText}\n            </button>\n          </form>\n        </div>\n      </div>\n    </FeedbackFromBackground>\n  )\n}\n\nexport default FeedbackForm\n","import * as React from \"react\"\nimport styled from \"@emotion/styled\"\nimport { css } from \"@emotion/react\"\n\nimport \"./top-banner.scss\"\n\n\n\nconst TopBanner = (props) => {\n  const { heading, description, image } = props\n\n  const TopBannerBackground = styled.div`\n    background-repeat: no-repeat;\n    background-position: center;\n    background-size: cover;\n    background-image: url(${image?.file.url || []});\n  `\n  return (\n    <TopBannerBackground className=\"top-banner\">\n      <div className=\"top-banner__inner-wrap container\">\n        <h1 className=\"top-banner__title col-xs\">{heading}</h1>\n        {Boolean(description?.childMarkdownRemark) &&\n          <p className=\"top-banner__description col-xs\">\n            {description.childMarkdownRemark.rawMarkdownBody}\n          </p>\n        }\n      </div>\n    </TopBannerBackground>\n  )\n}\n\nexport default TopBanner\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport \"./products-list.scss\"\n\n\nconst ProductsList = ({ component, currentLocale, listingPage }) => {\n  const contentPresent = Boolean(component?.content)\n  const content = component.content\n\n  if (!contentPresent) {\n    return <div>no content</div>\n  }\n\n  return (\n    <section className=\"products-list container\">\n      {Boolean(component?.name) &&\n        <span className=\"products-list__name subtitle-2 col-xs-12\">\n          {component.name}\n        </span>\n      }\n      {Boolean(component?.title) &&\n        <h2 className=\"products-list__title col-xs-12\">\n          {component.title}\n        </h2>\n      }\n      <div className=\"products-list__inner-wrap\">\n          {content.map((props, id) => (\n            <ProductsListItem key={id.toString()} {...props} currentLocale={currentLocale} listingPage={listingPage} />\n          ))}\n      </div>\n    </section>\n  )\n}\n\nconst ProductsListItem = ({ image, title, description, ctaText, ctaLink, currentLocale, listingPage }) => (\n  <Link\n    to={ctaLink\n    ? `/${currentLocale}/${listingPage}/${ctaLink.productSlug}`\n    : null}\n    className=\"products-list__item col-xs-12 col-xm-6 col-sm-4\">\n      <div className=\"products-list__image-wrap\">\n        <img src={image.file.url} alt=\"\" className=\"products-list__image\"/>\n      </div>\n      <h4 className=\"products-list__heading\">{title}</h4>\n      <p className=\"products-list__description\">\n        {description.childMarkdownRemark.rawMarkdownBody}\n      </p>\n      <span className=\"products-list__cta learn-more\">\n        {ctaText}\n      </span>\n  </Link>\n)\n\nexport default ProductsList\n","import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport TopPageBanner from \"../components/top-banner/top-banner\"\nimport ProductsList from \"../components/products-list/products-list\"\nimport Advertisement from \"../components/advertisement/advertisement\"\nimport FeedbackForm from \"../components/feedback-form/feedback-form\"\n\nimport {\n  findByInternalName,\n  ComponentInternalName,\n} from \"../components/component-internal-name\"\nimport { filterPageLocale, Locale } from \"../components/locale-provider\"\n\nconst locale = Locale.Ua\n\nexport default ({ pageContext: { page, allLocales, currentLocale } }) => {\n  // const localizedPage = filterPageLocale(page, locale)\n  // const localizedPage = page\n\n  const plpPageTopBanner = findByInternalName(\n    page,\n    ComponentInternalName.PlpTopBanner\n  )\n  const productsList = findByInternalName(\n    page,\n    ComponentInternalName.ProductsList\n  )\n  const plpInformationAdv = findByInternalName(\n    page,\n    ComponentInternalName.PlpInformationAdvertisement\n  )\n  const plpFeedbackForm = findByInternalName(\n    page,\n    ComponentInternalName.FeedbackForm\n  )\n\n  return (\n    <Layout  allLocales={allLocales} currentLocale={page.node_locale}>\n      <TopPageBanner {...plpPageTopBanner} />\n      <ProductsList component={productsList} currentLocale={page.node_locale} listingPage={page.slug} />\n      <Advertisement {...plpInformationAdv} currentLocale={page.node_locale}/>\n      <FeedbackForm {...plpFeedbackForm} />\n    </Layout>\n  )\n}\n"],"sourceRoot":""}