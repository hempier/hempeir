{"version":3,"sources":["webpack://gatsby-starter-default/./src/components/top-banner/top-banner.tsx","webpack://gatsby-starter-default/./src/components/contact-address/contact-address.tsx","webpack://gatsby-starter-default/./src/components/contact-feedback-form/contact-feedback-form.tsx","webpack://gatsby-starter-default/./src/templates/contact.tsx","webpack://gatsby-starter-default/./src/images/contact-address/icon-location.svg","webpack://gatsby-starter-default/./src/images/contact-address/icon-mail.svg","webpack://gatsby-starter-default/./src/images/contact-address/icon-telephone.svg"],"names":["props","heading","description","image","TopBannerBackground","file","url","className","Boolean","childMarkdownRemark","rawMarkdownBody","title","firmName","addressLabel","addressValue","regonLabel","regonValue","vatLabel","vatValue","phoneLabel","phoneValue","emailTitle","email","subtitle","nameFieldLable","phoneFieldLable","emailFieldLable","commentsFieldLable","ctaText","React","submitting","status","setServerState","handleServerResponse","ok","msg","form","reset","onSubmit","e","preventDefault","target","axios","method","data","FormData","then","r","catch","response","error","id","htmlFor","required","type","name","Locale","pageContext","page","allLocales","contactTopBanner","findByInternalName","ComponentInternalName","contactAddress","contactFeedbackForm","currentLocale","node_locale","IconLocation","createElement","defaultProps","module","exports","default","IconMail","IconTelephone"],"mappings":"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","file":"component---src-templates-contact-tsx-682d97347fd6b085773d.js","sourcesContent":["import * as React from \"react\"\nimport styled from \"@emotion/styled\"\nimport { css } from \"@emotion/react\"\n\nimport \"./top-banner.scss\"\n\n\n\nconst TopBanner = (props) => {\n  const { heading, description, image } = props\n\n  const TopBannerBackground = styled.div`\n    background-repeat: no-repeat;\n    background-position: center;\n    background-size: cover;\n    background-image: url(${image?.file.url || []});\n  `\n  return (\n    <TopBannerBackground className=\"top-banner\">\n      <div className=\"top-banner__inner-wrap container\">\n        <h1 className=\"top-banner__title col-xs\">{heading}</h1>\n        {Boolean(description?.childMarkdownRemark) &&\n          <p className=\"top-banner__description col-xs\">\n            {description.childMarkdownRemark.rawMarkdownBody}\n          </p>\n        }\n      </div>\n    </TopBannerBackground>\n  )\n}\n\nexport default TopBanner\n","import * as React from \"react\"\nimport IconLocation from \"../../images/contact-address/icon-location.svg\"\nimport IconTelephone from \"../../images/contact-address/icon-telephone.svg\"\nimport IconEmail from \"../../images/contact-address/icon-mail.svg\"\n\nimport \"./contact-address.scss\"\n\nconst  ContactAddress = ({\n    title,\n    firmName,\n    addressLabel,\n    addressValue,\n    regonLabel,\n    regonValue,\n    vatLabel,\n    vatValue,\n    phoneLabel,\n    phoneValue,\n    emailTitle,\n    email}) => {\n    return (\n        <section className=\"contact-address col-xs-12 col-lg-6\">\n            <h2 className=\"contact-address__heading\">{title}</h2>\n            <div className=\"contact-address__address\">\n                <IconLocation className=\"contact-address__icon contact-address__icon_address\"/>\n                <div className=\"contact-address__fieldset\">\n                    <strong>{firmName}</strong>\n                </div>\n                {Boolean(addressLabel && addressValue) &&\n                    <div className=\"contact-address__fieldset\">\n                        <strong className=\"contact-address__label\">{addressLabel}</strong>\n                        <span className=\"contact-address__value\">{addressValue}</span>\n                    </div>\n                }\n                {Boolean(regonLabel && regonValue) &&\n                    <div className=\"contact-address__fieldset\">\n                        <strong className=\"contact-address__label\">{regonLabel}</strong>\n                        <span className=\"contact-address__value\">{regonValue}</span>\n                    </div>\n                }\n                {Boolean(vatLabel && vatValue) &&\n                    <div className=\"contact-address__fieldset\">\n                        <strong className=\"contact-address__label\">{vatLabel}</strong>\n                        <span className=\"contact-address__value\">{vatValue}</span>\n                    </div>\n                }\n            </div>\n            <div className=\"contact-address__phone\">\n                <IconTelephone className=\"contact-address__icon contact-address__icon_phone\"/>\n\n                <div className=\"contact-address__fieldset\">\n                    <strong className=\"contact-address__label\">{phoneLabel}</strong>\n                    <span className=\"contact-address__value\">{phoneValue}</span>\n                </div>\n            </div>\n            <h5 className=\"contact-address__email-heding\">{emailTitle}</h5>\n            <div className=\"contact-address__email\">\n                <IconEmail className=\"contact-address__icon contact-address__icon_email\"/>\n                {email}\n            </div>\n        </section>\n    )\n}\n\nexport default ContactAddress","import * as React from \"react\"\nimport axios from \"axios\";\n\n\nimport \"./contact-feedback-form.scss\"\n\nconst ContactFeedbackForm = props => {\n  const {\n    title,\n    subtitle,\n    nameFieldLable,\n    phoneFieldLable,\n    emailFieldLable,\n    commentsFieldLable,\n    ctaText,\n  } = props\n\n  const [serverState, setServerState] = React.useState({\n    submitting: false,\n    status: null\n  });\n\n  const handleServerResponse = (ok, msg, form) => {\n    setServerState({\n      submitting: false,\n      status: { ok, msg }\n    });\n    if (ok) {\n      form.reset();\n    }\n  };\n\n  const handleOnSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    setServerState({ submitting: true });\n    axios({\n      method: \"post\",\n      url: \"https://getform.io/f/fd79ffaa-e0d5-42b2-b125-41458a780f9e\",\n      data: new FormData(form)\n    })\n      .then(r => {\n        handleServerResponse(true, \"Thanks!\", form);\n      })\n      .catch(r => {\n        handleServerResponse(false, r.response.data.error, form);\n      });\n  };\n\n  return (\n    <section className=\"feedback-form-contact col-xs-12 col-lg-6\">\n      <div className=\"feedback-form-contact__inner-wrap\">\n        <h2 className=\"feedback-form-contact__title\">{title}</h2>\n        <p className=\"feedback-form-contact__subtitle\">{subtitle}</p>\n        <form onSubmit={handleOnSubmit} className=\"feedback-form-contact__form form-body\" id=\"feedback-form-contact\">\n          <div className=\"feedback-form-contact__fieldset form-fieldset\">\n            <label htmlFor=\"name\" className=\"feedback-form-contact__label form-label\">\n              {nameFieldLable}\n            </label>\n            <input\n              required\n              type=\"text\"\n              id=\"name\"\n              name=\"name\"\n              className=\"feedback-form-contact__input form-input\"\n            />\n          </div>\n          <div className=\"feedback-form-contact__fieldset-wrap\">\n            <div className=\"feedback-form-contact__fieldset form-fieldset\">\n              <label\n                htmlFor=\"phone\"\n                className=\"feedback-form-contact__label form-label\"\n              >\n                {phoneFieldLable}\n              </label>\n              <input\n                required\n                type=\"text\"\n                id=\"phone\"\n                name=\"phone\"\n                className=\"feedback-form-contact__input form-input\"\n              />\n            </div>\n            <div className=\"feedback-form-contact__fieldset form-fieldset\">\n              <label\n                htmlFor=\"email\"\n                className=\"feedback-form-contact__label form-label\"\n              >\n                {emailFieldLable}\n              </label>\n              <input\n                required\n                type=\"text\"\n                id=\"email\"\n                name=\"email\"\n                className=\"feedback-form-contact__input form-input\"\n              />\n            </div>\n          </div>\n          <div className=\"feedback-form-contact__fieldset form-fieldset\">\n            <label\n              htmlFor=\"comment\"\n              className=\"feedback-form-contact__label form-label\"\n            >\n              {commentsFieldLable}\n            </label>\n            <input\n              type=\"text\"\n              id=\"comment\"\n              name=\"comment\"\n              className=\"feedback-form-contact__input form-input\"\n            />\n          </div>\n          <button type=\"submit\" className=\"feedback-form-contact__submit cta-link\">\n            {ctaText}\n          </button>\n        </form>\n      </div>\n\n    </section>\n  )\n}\n\nexport default ContactFeedbackForm\n","import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport ContactTopBanner from \"../components/top-banner/top-banner\"\nimport ContactAddress from \"../components/contact-address/contact-address\"\nimport ContactFeedbackForm from \"../components/contact-feedback-form/contact-feedback-form\"\n\nimport {\n  findByInternalName,\n  ComponentInternalName,\n} from \"../components/component-internal-name\"\nimport { filterPageLocale, Locale } from \"../components/locale-provider\"\n\nconst locale = Locale.Ua\n\nexport default ({ pageContext: { page, allLocales } }) => {\n  // const localizedPage = page\n\n  const contactTopBanner = findByInternalName(\n    page,\n    ComponentInternalName.ContactTopBanner\n  )\n  const contactAddress = findByInternalName(\n    page,\n    ComponentInternalName.ContactAddress\n  )\n  const contactFeedbackForm = findByInternalName(\n    page,\n    ComponentInternalName.ContactFeedbackForm\n  )\n\n  return (\n    <Layout allLocales={allLocales} currentLocale={page.node_locale}>\n      <ContactTopBanner {...contactTopBanner} />\n      <section className=\"contact container\">\n        <ContactAddress {...contactAddress} />\n        <ContactFeedbackForm {...contactFeedbackForm} />\n      </section>\n    </Layout>\n  )\n}\n","var React = require('react');\n\nfunction IconLocation (props) {\n    return React.createElement(\"svg\",props,React.createElement(\"path\",{\"d\":\"M11.5 0C6.81313 0 3 3.74238 3 8.34229C3 14.1239 11.5084 24 11.5084 24C11.5084 24 20 13.8396 20 8.34229C20 3.74238 16.187 0 11.5 0ZM14.0646 10.7849C13.3575 11.4788 12.4288 11.8258 11.5 11.8258C10.5713 11.8258 9.64239 11.4788 8.93552 10.7849C7.52134 9.39712 7.52134 7.13892 8.93552 5.75098C9.6203 5.07861 10.5312 4.7083 11.5 4.7083C12.4688 4.7083 13.3796 5.07876 14.0646 5.75098C15.4788 7.13892 15.4788 9.39712 14.0646 10.7849Z\",\"fill\":\"currentColor\"}));\n}\n\nIconLocation.defaultProps = {\"width\":\"24\",\"height\":\"24\",\"viewBox\":\"0 0 24 24\",\"fill\":\"none\"};\n\nmodule.exports = IconLocation;\n\nIconLocation.default = IconLocation;\n","var React = require('react');\n\nfunction IconMail (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"g\",{\"clipPath\":\"url(#clip0)\",\"key\":0},[React.createElement(\"path\",{\"d\":\"M23.7885 4.76819L16.5098 12L23.7885 19.2318C23.92 18.9568 23.9999 18.6528 23.9999 18.3281V5.67189C23.9999 5.34719 23.92 5.0432 23.7885 4.76819Z\",\"fill\":\"currentColor\",\"key\":0}),React.createElement(\"path\",{\"d\":\"M21.89 3.5625H2.10878C1.78408 3.5625 1.48009 3.64233 1.20508 3.77391L10.508 13.03C11.3306 13.8526 12.6682 13.8526 13.4908 13.03L22.7937 3.77391C22.5187 3.64233 22.2147 3.5625 21.89 3.5625Z\",\"fill\":\"currentColor\",\"key\":1}),React.createElement(\"path\",{\"d\":\"M0.211406 4.76819C0.0798281 5.0432 0 5.34719 0 5.67189V18.3281C0 18.6528 0.0798281 18.9569 0.211406 19.2318L7.49011 12L0.211406 4.76819Z\",\"fill\":\"currentColor\",\"key\":2}),React.createElement(\"path\",{\"d\":\"M15.515 12.9943L14.485 14.0242C13.1145 15.3948 10.8843 15.3948 9.51372 14.0242L8.48378 12.9943L1.20508 20.2261C1.48009 20.3577 1.78408 20.4375 2.10878 20.4375H21.89C22.2147 20.4375 22.5187 20.3577 22.7937 20.2261L15.515 12.9943Z\",\"fill\":\"currentColor\",\"key\":3})]),React.createElement(\"defs\",{\"key\":1},React.createElement(\"clipPath\",{\"id\":\"clip0\"},React.createElement(\"rect\",{\"width\":\"24\",\"height\":\"24\",\"fill\":\"white\"})))]);\n}\n\nIconMail.defaultProps = {\"width\":\"24\",\"height\":\"24\",\"viewBox\":\"0 0 24 24\",\"fill\":\"none\"};\n\nmodule.exports = IconMail;\n\nIconMail.default = IconMail;\n","var React = require('react');\n\nfunction IconTelephone (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"g\",{\"clipPath\":\"url(#clip0)\",\"key\":0},React.createElement(\"path\",{\"d\":\"M23.347 17.6136L19.9977 14.2643C18.8015 13.0681 16.768 13.5467 16.2896 15.1016C15.9307 16.1782 14.7346 16.7763 13.658 16.537C11.2657 15.9389 8.03602 12.8289 7.43794 10.317C7.07908 9.24036 7.79679 8.04419 8.87334 7.68538C10.4284 7.20691 10.9068 5.17343 9.71066 3.97726L6.36138 0.627989C5.40445 -0.209329 3.96905 -0.209329 3.13173 0.627989L0.859009 2.90071C-1.41371 5.29305 1.09824 11.6327 6.72023 17.2547C12.3422 22.8767 18.6819 25.5083 21.0743 23.116L23.347 20.8432C24.1843 19.8863 24.1843 18.4509 23.347 17.6136Z\",\"fill\":\"currentColor\"})),React.createElement(\"defs\",{\"key\":1},React.createElement(\"clipPath\",{\"id\":\"clip0\"},React.createElement(\"rect\",{\"width\":\"24\",\"height\":\"24\",\"fill\":\"white\"})))]);\n}\n\nIconTelephone.defaultProps = {\"width\":\"24\",\"height\":\"24\",\"viewBox\":\"0 0 24 24\",\"fill\":\"none\"};\n\nmodule.exports = IconTelephone;\n\nIconTelephone.default = IconTelephone;\n"],"sourceRoot":""}